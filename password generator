import tkinter as tk
import random
import string

def generate_password():
    username = username_entry.get().strip()
    
    if not username:
        result_label.config(text="Username is required")
        return
    
    password_length = length_entry.get().strip()
    if not password_length.isdigit() or int(password_length) <= 0:
        result_label.config(text="Invalid password length (Enter a positive integer)")
        return
    
    characters = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(random.choice(characters) for _ in range(int(password_length)))
    
    password_text.delete(0, tk.END)  # Clear the text box
    password_text.insert(0, password)

def login():
    login_label.config(text="Logged in")

def reset():
    length_entry.delete(0, tk.END)
    username_entry.delete(0, tk.END)
    password_text.delete(0, tk.END)
    login_label.config(text="")
    result_label.config(text="")

# Create the main window
root = tk.Tk()
root.title("Password Generator")
root.configure(bg='lightgray')  # Set background color
root.grid_rowconfigure(1, weight=1)  # Adjust row configuration

# Create title label
title_label = tk.Label(root, text="Password Generator", font=("Helvetica", 24), bg='purple', fg='white')
title_label.pack(pady=20)

# Create and place widgets
frame = tk.Frame(root, bg='lightgray')
frame.pack()

frame.grid_rowconfigure(2, weight=1)  # Adjust row configuration within frame

length_label = tk.Label(frame, text="Enter password length:", bg='lightgray', fg='black')
length_label.grid(row=0, column=0, padx=5, pady=5, sticky='w')

length_entry = tk.Entry(frame)
length_entry.grid(row=0, column=1, padx=5, pady=5)


username_label = tk.Label(frame, text="Enter username:", bg='lightgray', fg='black')
username_label.grid(row=1, column=0, padx=5, pady=5, sticky='w')

username_entry = tk.Entry(frame)
username_entry.grid(row=1, column=1, padx=5, pady=5)

frame_password = tk.Frame(root, bg='lightgray')
frame_password.pack()

frame_password.grid_rowconfigure(0, weight=1)  # Adjust row configuration within password frame

password_label = tk.Label(frame_password, text="Generated Password:", bg='lightgray', fg='black')
password_label.grid(row=0, column=0, padx=5, pady=5, sticky='w')

password_text = tk.Entry(frame_password)
password_text.grid(row=0, column=1, padx=5, pady=5, sticky='w')

generate_button = tk.Button(root, text="Generate Password", command=generate_password, bg='blue', fg='white')
generate_button.pack(pady=5)

login_button = tk.Button(root, text="Login", command=login, bg='green', fg='white')
login_button.pack(pady=5)

login_label = tk.Label(root, text="", bg='lightgray', fg='black')
login_label.pack()

result_label = tk.Label(root, text="", bg='lightgray', fg='red')
result_label.pack()

reset_button = tk.Button(root, text="Reset", command=reset, bg='gray', fg='white')
reset_button.pack(pady=10)

# Start the GUI event loop
root.mainloop()
